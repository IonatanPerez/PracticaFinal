//// ****** THIS FILE IS AUTOGENERATED ******
////
////          >>>> DO NOT CHANGE <<<<
////
/// 
///  Filename; C:\Users\Agus\Desktop\driver.py
///  Source class: BotellaLoca
///  Generation timestamp: 2018-11-28T18:04:33.906482
///  Class code hash: 502e5622f90432aab452ee90e4cdbccaabe7b8d8
///
/////////////////////////////////////////////////////////////


#include "inodriver_bridge.h"

SerialCommand sCmd;

void ok() {
  Serial.println("OK");
}

void error(const char* msg) {
  Serial.print("ERROR: ");
  Serial.println(msg);
}

void error_i(int errno) {
  Serial.print("ERROR: ");
  Serial.println(errno);
}

void bridge_loop() {
  while (Serial.available() > 0) {
    sCmd.readSerial();
  }
}

void bridge_setup() {
  //// Setup callbacks for SerialCommand commands

  // All commands might return
  //    ERROR: <error message>

  // All set commands return 
  //    OK 
  // if the operation is successfull

  // All parameters are ascii encoded strings
  sCmd.addCommand("INFO?", getInfo); 

  sCmd.setDefaultHandler(unrecognized); 


  // paso
  // <I> int as string 

  // Setter:
  //   PASO <I> 
  // Returns: OK or ERROR    
  sCmd.addCommand("PASO", wrapperSet_PASO); 
}

//// Code 

void getInfo() {
  Serial.print("BotellaLoca,");
  Serial.println(COMPILE_DATE_TIME);
}

void unrecognized(const char *command) {
  error("Unknown command");
}
//// Auto generated Feat and DictFeat Code
// COMMAND: PASO, FEAT: paso

void wrapperSet_PASO() {
  char *arg;
  
  arg = sCmd.next();
  if (arg == NULL) {
    error("No value stated");
    return;
  }
  int value = atoi(arg);

  int err = set_PASO(value);
  if (err == 0) {
    ok();
  } else {
    error_i(err);
  }
};



